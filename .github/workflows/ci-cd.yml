name: Python CI/CD

on:
  push:
    branches: [main]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f "requirements.txt" ]; then
            pip install -r requirements.txt
          fi

      - name: Run unit tests
        run: |
          echo "🔍 Checking for tests..."
          if compgen -G "test*.py" > /dev/null || [ -d tests ]; then
            echo "✅ Running tests in tests/ directory..."
            python -m unittest discover -s tests -p "test*.py"
          else
            echo "⚠️ No tests found, skipping."
          fi

  deploy:
    needs: build-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Test SSH connection
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            echo "SSH connected successfully"
            whoami
            pwd

      - name: Deploy to EC2 with rollback
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            set -e

            cd /home/ubuntu/ai-backend

            PREV_COMMIT=$(git rev-parse HEAD)
            echo "Previous commit: $PREV_COMMIT"

            git fetch --all
            git reset --hard origin/main

            if [ -f "venv/bin/activate" ]; then
              source venv/bin/activate
              pip install -r requirements.txt
            else
              echo "⚠️ No venv found. Please set up one on the server."
            fi

            pkill -f gunicorn || true
            fuser -k 3001/tcp || true

            nohup gunicorn main:app --bind 0.0.0.0:3001 --workers 4 > gunicorn.log 2>&1 &
            sleep 8

            if ! curl -sSf http://127.0.0.1:3001/healthz; then
              echo "❌ Deployment failed, rolling back..."
              pkill -f gunicorn || true
              git reset --hard $PREV_COMMIT
              nohup gunicorn main:app --bind 0.0.0.0:3001 --workers 4 > gunicorn.log 2>&1 &
              exit 1
            fi

            echo "✅ Deployment successful!"

      - name: Invalidate CloudFront cache
        uses: chetan/invalidate-cloudfront-action@v1
        with:
          distribution-id: ${{ secrets.CLOUDFRONT_ID }}
          paths: "/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
