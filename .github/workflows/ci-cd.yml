name: Python CI/CD

on:
  push:
    branches: [main]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          if [ -f "test_main.py" ]; then
            python -m unittest discover
          else
            echo "No tests found"
          fi

  deploy:
    needs: build-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Test SSH connection
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            echo "SSH connected successfully"
            whoami
            pwd

      - name: Deploy to EC2 with rollback
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            set -e  # Exit on any failure

            cd /home/ubuntu/ai-backend

            # Save current commit for rollback
            PREV_COMMIT=$(git rev-parse HEAD)
            echo "Previous commit: $PREV_COMMIT"

            # Pull new changes
            git fetch --all
            git reset --hard origin/main

            # Activate virtualenv
            if [ -f "venv/bin/activate" ]; then
              source venv/bin/activate
              pip install -r requirements.txt
            fi

            # Kill old processes
            pkill -f gunicorn || true
            fuser -k 3001/tcp || true

            # Start Gunicorn safely in background
            nohup gunicorn main:app --bind 0.0.0.0:3001 --workers 4 > gunicorn.log 2>&1 &
            disown
            sleep 10  # Give it time to start

            # Health check
            if ! curl -sSf http://127.0.0.1:3001/healthz; then
              echo "Deployment failed, rolling back..."
              pkill -f gunicorn || true
              git reset --hard $PREV_COMMIT
              nohup gunicorn main:app --bind 0.0.0.0:3001 --workers 4 > gunicorn.log 2>&1 &
              disown
              exit 1
            fi

            echo "Deployment successful!"

      - name: Invalidate CloudFront cache
        uses: chetan/invalidate-cloudfront-action@v1
        with:
          distribution-id: ${{ secrets.CLOUDFRONT_ID }}
          paths: "/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
